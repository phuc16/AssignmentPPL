
        Class JumpSearch {
            jumpSearch(arr: Array[Int, 0xAB]; x, n: Int) {
            ## Finding block size to be jumped ##
            Var step: Float = Math.sqrt(n);
        
            ## Finding the block where element is ##
            ## present (if it is present) ##
            Var prev: Int = 0;
            Foreach (i In 1 .. 100) {
                If (arr[STD.min(step, n)-1] < x) {
                    prev = step;
                    step = step + Math.sqrt(n);
                    If (prev >= n) {
                        Return -1;
                    }
                }
            }
        
            ## Doing a linear search for x in block ##
            ## beginning with prev. ##
            Foreach (i In 0 .. x) {
                prev = prev + 1;
                ## If we reached next block or end of ##
                ## array, element is not present. ##
                If (prev == STD.min(step, n)) {
                    Return -1;
                }
            }
            ## If element is found ##
            If (arr[prev] == x) {
                Return prev;
            }
            Return -1;
        }
    }